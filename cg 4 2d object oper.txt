#include<iostream>
#include<graphics.h>
#include<math.h>
using namespace std;
int main()
{
	int gd=DETECT,gm,s;
	initgraph(&gd,&gm,NULL);

	cout<<"\n1.Translation\n2.Rotation\n3.Scaling\n4.Reflection\n5.Shearing"<<endl;
	cout<<"\n\nEnter Selection: ";
	cin>>s;
	
	switch(s)
	{
	case 1:
		{

			int x1=200,y1=150,x2=300,y2=250;
			int tx=50,ty=50;
			cout<<"\nRecangle before Translation"<<endl;
			setcolor(3);
			rectangle(x1,y1,x2,y2);
			setcolor(4);
			cout<<"\nRectangle after Translation"<<endl;
			rectangle(x1+tx,y1+ty,x2+tx,y2+ty);
			getch();
			break;
		}

	case 2:
		{

			long x1=200,y1=200,x2=300,y2=300;
			double a;
			cout<<"\nRectangle with Rotation:"<<endl;
			setcolor(3);
			rectangle(x1,y1,x2,y2);
			cout<<"\nAngle of rotation: ";
			cin>>a;
			a=(a*3.4)/180;
			long xr=x1+((x2-x1)*cos(a)-(y2-y1)*sin(a));
			long yr=y1+((x2-x1)*sin(a)+(y2-y1)*cos(a));
			setcolor(2);
			rectangle(x1,y1,xr,yr);
			getch();
			break;
		}									
								
	case 3:
		{

			int x1=30,y1=30,x2=70,y2=70,x=2,y=2;
			cout<<"Before scaling"<<endl;
			setcolor(3);
			rectangle(x1,y1,x2,y2);
			cout<<"After scaling"<<endl;
			setcolor(10);
			rectangle(x1*x,y1*y,x2*x,y2*y);
			getch();
			break;

		}

	case 4:
		{
	
			int x1=200,y1=300,x2=500,y2=300,x3=350,y3=400;
			cout<<"Triangle before Reflectiob"<<endl;	
			setcolor(3);
			line(x1,y1,x2,y2);
			line(x1,y1,x3,y3);
			line(x2,y2,x3,y3);
			cout<<"\nTriangle after Reflection"<<endl;
			setcolor(5);
			line(x1,-y1+500,x2,-y2+500);
			line(x1,-y1+500,x3,-y3+500);
			line(x2,-y2+500,x3,-y3+500);
			getch();
			break;

		}
	case 5:
		{
			int x1=200,y1=50,x2=300,y2=50,x3=200,y3=100,x4=300,y4=100,shx=2;
			cout<<"\nBefore Shearing of REctangle"<<endl;
			setcolor(3);
			line(x1,y1,x2,y2);
			line(x1,y1,x3,y3);
			line(x3,y3,x4,y4);
			line(x2,y2,x4,y4);
			cout<<"\nAfter Shearing of REctangle"<<endl;
			x1=x1+shx*y1;
			x2=x2+shx*y2;
			x3=x3+shx*y3;
			x4=x4+shx*y4;
			setcolor(13);
			line(x1,y1,x2,y2);
			line(x1,y1,x3,y3);
			line(x3,y3,x4,y4);
			line(x2,y2,x4,y4);
			getch();
			break;
		}
	default:
		{
			cout<<"\nInvalid Selection"<<endl;
			break;
		}
	}
	closegraph();
	return 0;
}



















